<?xml version="1.0"?>
<space-config>
           <!-- if set to true, this space is not published in any directory service 
           and therefore is not accessible for applications. Default value is false -->
           <isPrivate>false</isPrivate>
           <schema>swap</schema>
           <!--distributed cache config name-->
           <dist-cache>
                <config-name>DefaultConfig</config-name>
           </dist-cache>
           <!--cluster configuration-->
           <cluster>
                <enabled>${com.gs.cluster.cluster_enabled}</enabled>
                <config-url>${com.gs.cluster.config-url}</config-url>
                <multicast>
                    <!--Machine network card interface. Relevant when having multiple networks cards.-->
                    <discovery-interface>localhost</discovery-interface>
                </multicast>
           </cluster>
           <!-- all the persistent space relevant details -->
           <persistent>
           	   <enabled>true</enabled>
               <!-- name of the storage adapter class to be used by the space 
               - by default, it is com.j_spaces.sadapter.GenericPA.GenericPersistentAdapter -->
               <StorageAdapterClass>com.j_spaces.sadapter.GenericPA.GenericPersistentAdapter</StorageAdapterClass>
               <AdapterType>com.j_spaces.sadapter.GenericPA.PerstPersistentAdapter</AdapterType>
               <DataBaseName>${com.gs.home}/GenericPersistProperties/${com.gs.container.name}_${com.gs.space.name}/${com.gs.container.name}_${com.gs.space.name}DB.dbs</DataBaseName>
               <userName></userName>
			   <password></password>
			   <Number_Sync_Objects>-1</Number_Sync_Objects>
               <Check_Point_Period>-1</Check_Point_Period>
	           <Page_Pool_Size>32768</Page_Pool_Size>
               <Sync_On_Commit>true</Sync_On_Commit>
               
               <!-- path to the directory that holds the database properties and data type mapping 
               e.g ${com.gs.home}/GenericPersistProperties -->
               <StorageAdapterURL>${com.gs.home}/GenericPersistProperties</StorageAdapterURL>
               <!-- if true persistent space will be forced to start in COLD_INIT(empty) otherwise WARM_INIT -->
               <force-cold-init>true</force-cold-init>
           </persistent>
           <QueryProcessor>
              <!--Space read timeout Default Value: -->
              <space_read_lease_time>0</space_read_lease_time>
              <!--Entry lease period Default Value: -->
              <space_write_lease>9223372036854775807</space_write_lease>
              <!--Transaction timeout Default Value: -->
              <transaction_timeout>30000</transaction_timeout>
              <!--Do we initialise JMX in QP ? Default Value: -->
              <init_jmx>false</init_jmx>
              <!-- Default Value: -->
              <trace_exec_time>false</trace_exec_time>
              <!-- Default Value: -->
              <debug_mode>false</debug_mode>
              <!-- Default Value: -->
              <parser_case_sensetivity>true</parser_case_sensetivity>
              <!-- Default Value: -->
              <auto_commit>true</auto_commit>
               <!-- Default Value: -->
			  <date_format>yyyy-MM-dd</date_format>
			   <!-- Default Value: -->
			  <datetime_format>yyyy-MM-dd hh:mm:ss</datetime_format>
			   <!-- Default Value: -->
			  <time_format>hh:mm:ss</time_format>
           </QueryProcessor>
           <!--	Description: Lets you control whether or not entries undergo serialization. 
			Setting this parameter to 0 (Native Serialization) specifies that neither the engine nor the proxy 
			should perform any serialization. Entry meta data is transferred to and stored on the space as is.
			When using the Native Serialization mode, user-defined classes must be part of the server CLASSPATH or
			its java.rmi.server.codebase. User-defined classes must also implement the hashCode and equals methods, 
			or the user may supply a codebase of user-defined class fields. 
			Setting this parameter to 1 (Light Serialization) or 2 (Full Serialization) specifies that 
			all space entry attributes are transferred to the server as MarshalledObjects (mode 1) 
			or MarshalledObjects (mode 2) and stored as marshalled objects. 
			Setting this parameter to 3 (Compressed Serialization) specifies that all space entry attributes are transferred 
			to the server as compressed marshaled objects and stored as compressed marshalled objects.
			Default value is 2 - (Full Serialization)
			One can define ${com.gs.serialization} and set it using -Dcom.gs.serialization system property.
			-->
			<serialization-type>0</serialization-type>
           <!--if number-implicit-indexes=0, the default number of implicit indexes: for MemorySpace = 2, PersistentSpace = 1-->
           <number-implicit-indexes>0</number-implicit-indexes>
           <!--LRMI stub handler-->
           <stub-handler>com.j_spaces.core.lrmi.LRMIStubHandlerImpl</stub-handler>
           <!--Comment the above configuration and use the following one instead to enforce SSL communication with the Space-->
           <!--<stub-handler>com.j_spaces.core.SSLStubHandlerImpl</stub-handler>-->
           <ssl-stub-handler>
                <!--URI to keyStore and trustStore-->
                <protocol-name>TLS</protocol-name>
                <keystore-type>JKS</keystore-type>
                <key-managment-method>SunX509</key-managment-method>
                <keystore>${com.gs.home}/config/gigaspaces_server.keystore</keystore>
                <truststore>${com.gs.home}/config/gigaspaces_server.truststore</truststore>
                <password>gigaspaces</password>
           </ssl-stub-handler>
           <!-- Please refer to the com.gigaspaces.transport section under
           /config/services/services.config file for the location of all the LRMI configuration settings. -->
           <lrmi-stub-handler>
                <!-- The Thread pool tasks' queue size - Default=Integer.MAX_VALUE -->
				<worker-threads-queue-size>2147483647</worker-threads-queue-size>
				<slowconsumer>
	      			<!-- Client bellow this throughput might be slow - Default=0-->
	      			<throughput>0</throughput>
	      			<!-- Maximum time waiting [ms] - Default=100 -->
	      			<latency>100</latency>
	      			<!-- The amount of retries - Default=3 -->
	      			<retries>3</retries>
				</slowconsumer>
           </lrmi-stub-handler>
           <engine>
           		<!-- An entry's attribute can be indexed using explicit or implicit indexing. 
           		By default, when class attributes are indexed, a hash-based index is maintained. 
           		The hash-based index is used for the regular JavaSpaces matching (i.e., "equals") 
           		and accelerates the read () and take () operations. In order to accelerate the read () and take () 
           		operations that use SQLQuery with greater than/less than operations, turn on the btree index.
           		By default the btree index is NOT maintained for indexed class attributes (no value in <enabled-classes> )
           		Leaving the btree index turned on impacts the write performance.
  				To turn on the btree index, modify the space configuration file as follows (note the asterisk):
  				<enabled-classes>*</enabled-classes> or <enabled-classes>classA,classB</enabled-classes>
           		-->
                <extended-match>
                     <enabled-classes></enabled-classes>
                     <!-- This parameter is the threshold where index is maintained  i.e. whenever 
                     there are more than <min_ext_index_activation_size> amount of entries stored within the space 
                     an extended index will be maintained. 
                     Default value: 1 -->
                     <min_ext_index_activation_size>1</min_ext_index_activation_size>
                     <!-- Default value: 300 -->
                     <regular-expressions-cache-size>300</regular-expressions-cache-size>
                </extended-match>
                <!--minimum threads in engine at starting GigaSpace Server-->
                <min_threads>4</min_threads>
                <!--maximum threads in engine-->
                <max_threads>64</max_threads>
                <!--minimum number of threads dedicated to the notify channel-->
                <notify_min_threads>4</notify_min_threads>
                <!--maximum number of threads dedicated to the notify channel-->
                <notify_max_threads>64</notify_max_threads>
                <!--if true, give to GS Engine threads higher priority-->
                <threads_higher_priority>false</threads_higher_priority>
                <!--default cache size of Cache Manager-->
                <cache_size>100000</cache_size>
                <!--0 - LRU POLICY, 1 - ALL IN CACHE , default value: 1 -->
                <cache_policy>0</cache_policy>
                <!--full visibility of the entries under transaction read/readIfExists-->
                <dirty_read>false</dirty_read>
                <!--VM heap size threshold usage percentage-->
                <memory_usage>
                	 <!--default value: false -->
                     <enabled>true</enabled>
                     <!--VM heap size max threshold usage percentage-->
                     <high_watermark_percentage>85</high_watermark_percentage>
                     <!--VM heap size lower threshold percentage for blocking write-type operations-->
                     <write_only_block_percentage>80</write_only_block_percentage>
                     <!--VM heap size upper threshold percentage for checking only write-type operations-->
                     <write_only_check_percentage>76</write_only_check_percentage>
                     <!--VM heap size min threshold usage percentage-->
                     <low_watermark_percentage>75</low_watermark_percentage>
                     <!--Amount of entries to be evicted each time we are above the high_watermark_percentage-->
                     <eviction_batch_size>500</eviction_batch_size>
                     <!--Number of retries to lower the memory level below the low_watermark_percentage-->
                     <retry_count>5</retry_count>
                     <!--If true GC will be called explicitly before trying to evict. Default Value:false-->
					 <explicit-gc>false</explicit-gc>
                </memory_usage>
           </engine>
           <!--interval in milleseconds between cleaning lease manager-->
           <lease_manager>
                <expiration_time_interval>60000</expiration_time_interval>
           </lease_manager>
           <!--number of retries to server-->
           <retries>10</retries>
           <!--number of notify retries-->
           <notifier-retries>3</notifier-retries>
           <!--RDBMS configuration-->
           <init_sa_connections>10</init_sa_connections>
           <max_sa_connections>20</max_sa_connections>
           <!--if true all data will be lost, if WARM INIT FAILED-->
           <sa_reset_on_failure>false</sa_reset_on_failure>
           <!--if true all entries under transaction will be aborted, if the space failed to connect to Transaction Manager on WARM_INIT-->
           <rollback_on_tm_failed>false</rollback_on_tm_failed>
           <filters>
                <!-- List of the available filters -->
                <filter-names>DefaultSecurityFilter,Statistics</filter-names>
                <!-- List of available filter operation codes: -->
                	 <!--The operation codes defines the operations in which this filter will be called.-->
                     <!-- 0 - Before write;-->
                     <!-- 1 - After write;-->
                     <!-- 2 - Before read;-->
                     <!-- 3 - Before take;-->
                     <!-- 4 - Before notify;-->
                     <!-- 5 - Before getadmin;-->
                     <!-- 6 - Set security context;-->
                     <!-- 7 - Before get collection;-->
                     <!-- 8 - Before Clean space;-->
                     <!-- 9 - Before update;-->
                     <!-- 10 - After update;-->
                     <!-- 11 - Before read multiple;-->
                     <!-- 12 - After read multiple;-->
                     <!-- 13 - Before take multiple;-->
                     <!-- 14 - After take multiple;-->
                     <!-- 15 - Before notify trigger operation;-->
                     <!-- 16 - After notify trigger operation;-->
                     <!-- 17 - Before all notify trigger operation;-->
                     <!-- 18 - After all notify trigger operation;-->                                          
                     <!-- the following operation codes can be used ONLY in non-security filters -->
                     <!-- 52 - Before remove;-->
                     <!-- 53 - After remove;-->
                <!--The user account driver implementation definition. This driver provides access-->
                <!--to the users account information such as the user name,password and roles-->
                <!--The driver can be any class the implements the com.j_spaces.core.filters.ISpaceUserAccountDriver.-->
                <!--The default driver is com.j_spaces.core.filters.MemoryRealm which uses the default-users for-->
                <!--maintaining the users account information-->
                <userAccountDriver>com.j_spaces.core.filters.MemoryRealm</userAccountDriver>
                <!--Use this filter to enforce authentication and operation based authorization-->
                <DefaultSecurityFilter>
                     <enabled>false</enabled>
                     <security>true</security>
                     <class>com.j_spaces.core.filters.DefaultSecurityFilter</class>
                     <active-when-backup>true</active-when-backup>
				     <shutdown-space-on-init-failure>false</shutdown-space-on-init-failure>
                     <operation-code>0, 2, 3, 4, 6, 8, 9, 11, 13</operation-code>
                     <url>default-users</url>
                     <priority>1</priority>
                </DefaultSecurityFilter>
                <!-- Statistics module filter -->
                <Statistics>
                	 <!-- Default value: true -->
                     <enabled>${com.gs.filters.statistics.enabled}</enabled>
                     <security>false</security>
                     <active-when-backup>true</active-when-backup>
   	    			 <shutdown-space-on-init-failure>false</shutdown-space-on-init-failure>
                     <class>com.j_spaces.core.filters.JSpaceStatistics</class>
                     <url>none</url>
                     <priority>1</priority>
                     <operation-code>0, 2, 3, 4, 7, 8, 9, 12, 14, 15, 16, 52</operation-code>
                </Statistics>
           </filters>
           <!--GigaSpaces JMS API: this section lists all the Destinations bonded names-->
           <jms>
                <!--default jms configuration file, used in a cluster-->
                <config-name>DefaultConfig</config-name>
                <!--The JMS Admin Connection Factories details:
                 The container and space names which are associated to this JMS Connection Factory-->
                <connections>
                     <!--the rmi port which is used for the spaceURL of the
                    JMS connection factory. Default 10098 port is used.-->
                     <rmi-port>10098</rmi-port>
                </connections>
                <!--Coma separated list of the JMS Admin objects.-->
                <!--MyTopic/MyQueue are default destinations 
				while TempTopic/TempQueue are default temporary destinations.-->
                <administrated-destinations>
                     <topics>
                          <topic-names>MyTopic,TempTopic</topic-names>
                     </topics>
                     <queues>
                          <queue-names>MyQueue,TempQueue</queue-names>
                     </queues>
                </administrated-destinations>
           </jms>
           <workers>
                <worker-names>DurableServiceWorker,MulticastNotifyWorker</worker-names>
                <!--interrupt the worker on shutdown-->
                <interrupt>false</interrupt>
                <DurableServiceWorker>
                     <enabled>false</enabled>
                     <class-name>com.j_spaces.jms.DurableServiceWorkerImpl</class-name>
                     <arg>
                     </arg>
                     <description>Provides JMS Durable Subscriber capabilitiesfor jms clients</description>
              		 <!-- default is true -->
					 <active-when-backup>true</active-when-backup>
					 <!-- default is false -->
					 <shutdown-space-on-init-failure>false</shutdown-space-on-init-failure>
					 <!-- default is 1 -->					
					 <instances>1</instances>
                </DurableServiceWorker>
                
                <MulticastNotifyWorker>
                     <enabled>false</enabled>
                     <class-name>com.j_spaces.worker.multicast.MulticastNotifyWorker</class-name>
                     <!--To reduce latency, dispatch intervals should be set to accommodate latency requirements-->
                     <interval-dispatch-time>1000</interval-dispatch-time>
                     <chunk-event-size>100</chunk-event-size>
                     <multicast-group>224.0.0.1</multicast-group>
                     <multicast-port>34721</multicast-port>
                     <ttl>4</ttl>
                     <discovery-interface>localhost</discovery-interface>
                     <description>Multicast Notify Manager</description>
                     <!-- default is true -->
					 <active-when-backup>true</active-when-backup>
					 <!-- default is false -->
					 <shutdown-space-on-init-failure>false</shutdown-space-on-init-failure>
					 <!-- default is 1 -->					
					 <instances>1</instances>
                </MulticastNotifyWorker>
           </workers>
</space-config>
